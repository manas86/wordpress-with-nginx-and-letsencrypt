version: "3"

services:
  nginx-proxy:
    container_name: nginx-proxy
    build: .
    image: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./etc/ssl:/etc/ssl
    command: bash -c "start.sh"
    restart: always

  nginx:
    container_name: nginx-wordpress
    image: nginx:latest
    depends_on:
      - wordpress
    ports:
      - "80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx
      - ./wordpress:/var/www/html
    networks:
      - nginxproxy_network

  wordpress:
    container_name: wordpress
    image: wordpress-prod:5.1.1-php7.1-fpm
    ports:
      - '9000'
    working_dir: /var/www/html/
    volumes:
      - ./wordpress:/var/www/html/
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_TABLE_PREFIX=wpprefix_
      - WORDPRESS_DB_HOST=mysql_db:3306
      - WORDPRESS_DB_PASSWORD=root
    depends_on:
      - mysql_db
    restart: always
    networks:
      - nginxproxy_network

  mysql_db:
    image: mysql:8
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - mySQLdb_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: V1h44n2o14
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
      - nginxproxy_network

networks:
  nginxproxy_network:
    external: true
volumes:
  mySQLdb_data:
